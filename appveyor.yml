clone_depth: 50

max_jobs: 1

image: Visual Studio 2015

environment:
  global:
    PYPI_PASSWORD:
      secure: UyXXrJgoqj2VfcHDA9/PTw==
    PYPI_USERNAME: DannieBee

  matrix:
    - PYTHON: C:\\Python36-x64
      COVERAGE: "False"
      SDIST: ""
    - PYTHON: C:\\Python37-x64
      SDIST: "sdist"
      COVERAGE: "True"

stack: Python %PYTHON%

platform:
  - x64

matrix:
  fast_finish: true

init:
  - set PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%
  - python --version

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
      https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
      Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
      throw "There are newer queued builds for this pull request, failing early." }
  - pip install -r requirements.txt

build_script:
  - python setup.py build_ext --inplace
  - python setup.py %SDIST% bdist_wheel

test_script:
  - pytest tests/

artifacts:
  - path: dist\*
    name: pypiartifacts

after_test:
  - ECHO "DONE!"
  - ECHO "BUILDING WHEELS..."
  - python setup.py %SDIST% bdist_wheel

deploy_script:
  - ps: |
      if ($env:APPVEYOR_REPO_TAG -eq "true") {
        ECHO "Starting wheel deployment"
        twine upload --repository-url https://test.pypi.org/legacy/ -u $env:PYPI_USERNAME -p $env:PYPI_PASSWORD dist/*
        ECHO "Finished wheel deployment"
      }