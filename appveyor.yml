clone_depth: 2

max_jobs: 2

image: Visual Studio 2015

environment:
  global:
    PASSWORD:
      secure: UyXXrJgoqj2VfcHDA9/PTw==
    PYPI_USERNAME:
      secure: CnaavCcEu6Q8wPk1+Z7LFw==
    CONDA_TOKEN:
      secure: lFSUM0O2tuIoc/xqGOIVAxnJ2OcocVk0xpNwv4UDl4e95AoqyT71d9GGn+5Vx3Dz

  matrix:
    - CONDA: C:\Miniconda36-x64
    - CONDA: C:\Miniconda37-x64

platform:
  - x64

init:
  - SET PATH=%CONDA%;%CONDA%\\Scripts;%PATH%
  - IF "%CONDA%" == "C:\Miniconda37-x64" SET PATH=%CONDA%\\Library\\bin;%CONDA%\\Library\\mingw-w64\\bin;%PATH%
  - python --version

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
      https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
      Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
      throw "There are newer queued builds for this pull request, failing early." }
  - conda config --set always_yes yes
  - conda update conda --quiet
  - conda config --prepend channels conda-forge
  - conda config --append channels bashtage
  - conda config --get channels
  - >
    conda create -n env
    arch 
    copulae
    cython
    matplotlib
    numpy
    pandas
    pytest
    pytest-cov
    scipy
    statsmodels
    wheel
  - activate env

build_script:
  - python setup.py build_ext --inplace

test_script:
  - pytest --no-cov tests/

artifacts:
  - path: dist\*
    name: pypi artifacts

deploy_script:
  - ps: |
      if ($env:appveyor_repo_tag -eq $true) {
        activate env
        ECHO "DONE!"
        ECHO "BUILDING WHEELS..."
        python setup.py bdist_wheel

        conda install anaconda-client conda-build conda-verify twine

        ECHO "Starting wheel deployment"
        twine upload --skip-existing --verbose -u $env:PYPI_USERNAME -p $env:PASSWORD dist/*
        ECHO "Finished wheel deployment"

        New-Item -ItemType Directory -Force -Path output-dir
        conda build --output-folder output-dir conda.recipe

        anaconda -t $env:CONDA_TOKEN upload output-dir/win-64/*.tar.bz2 --skip-existing
      }
